name: E2E tests

on:
    pull_request:
        branches:
            - main
    workflow_dispatch: # Allow manual triggering of the workflow

jobs:
    test:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            
        steps:
            - name: Checkout code
              uses: actions/checkout@v3
            
            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '22'
              
            - name: Setup Go
              uses: actions/setup-go@v4
              with:
                  go-version: '1.23.4'
                  cache: true
            
            - name: Set up Docker
              uses: docker/setup-buildx-action@v2
              
            - name: Install dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y jq
                  go mod download
            
            - name: Build the MCP server
              run: go build -o dist/sandbox-mcp ./cmd/sandbox-mcp/main.go
            
            - name: Build sandboxes and Docker images
              run: |
                  # Get the absolute path to the built binary
                  BINARY_PATH="$(pwd)/dist/sandbox-mcp"
                  
                  "$BINARY_PATH"

                  # Copy the sandboxes directory to the XDG config path
                  export XDG_CONFIG_HOME="$HOME/.config"
                  CONFIG_SANDBOXES="$XDG_CONFIG_HOME/sandbox-mcp/sandboxes"
                  mkdir -p "$CONFIG_SANDBOXES"
                  cp -r sandboxes/* "$CONFIG_SANDBOXES/"
                  
                  # Build Docker images for all sandboxes using the MCP binary
                  "$BINARY_PATH" --build
            
            - name: Prepare config for GitHub
              run: |
                  # Get the absolute path to the built binary
                  BINARY_PATH="$(pwd)/dist/sandbox-mcp"
                  
                  # If the github-config.json file exists, use it as a template
                  if [ -f "test/github-config.json" ]; then
                    # Replace the placeholder with the actual binary path
                    sed "s|BINARY_PATH_PLACEHOLDER|$BINARY_PATH|g" test/github-config.json > test/config.json
                  else
                    # Create a simple config using echo and jq
                    echo '{"mcpServers":{"sandbox-mcp":{"command":"BINARY_PATH_PLACEHOLDER","args":["--stdio"]}}}' | sed "s|BINARY_PATH_PLACEHOLDER|$BINARY_PATH|g" > test/config.json
                  fi
                  
                  # Verify the config
                  echo "Using config.json:"
                  cat test/config.json
            
            - name: Fix permissions for test files
              run: chmod -R 777 test/
            
            - name: Run tests
              run: |
                  chmod +x test/run_tests.sh
                  ./test/run_tests.sh
              
            - name: Handle test failure
              if: failure()
              run: |
                  echo "::error::Tests failed. Check the test logs for details."
                  exit 1
